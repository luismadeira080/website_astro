---
interface Props {
  locale: 'en' | 'pt';
  context?: string;
}

const { locale, context = 'general' } = Astro.props;

// Pre-configured messages based on context
const messages = {
  pt: {
    general: 'Olá! Gostaria de saber mais sobre os seus serviços de criação de websites.',
    landing: 'Olá! Estou interessado numa landing page para o meu negócio.',
    seo: 'Olá! Gostaria de melhorar o SEO do meu negócio e aparecer no Google.',
    project: 'Olá! Vi o vosso trabalho e gostaria de discutir um projeto semelhante.',
    service: 'Olá! Gostaria de falar sobre este serviço específico.',
  },
  en: {
    general: 'Hi! I would like to know more about your website development services.',
    landing: 'Hi! I am interested in a landing page for my business.',
    seo: 'Hi! I would like to improve my business SEO and appear on Google.',
    project: 'Hi! I saw your work and would like to discuss a similar project.',
    service: 'Hi! I would like to talk about this specific service.',
  }
};

const copy = {
  pt: {
    title: 'Vamos Falar?',
    whatsapp: 'Enviar mensagem WhatsApp',
    whatsappSub: 'Resposta rápida',
    call: 'Ligar Agora',
    callSub: '+351 924 466 899',
    form: 'Preencher Formulário',
    formSub: 'Envie uma mensagem detalhada',
    close: 'Fechar'
  },
  en: {
    title: "Let's Talk?",
    whatsapp: 'Send WhatsApp Message',
    whatsappSub: 'Quick response',
    call: 'Call Now',
    callSub: '+351 924 466 899',
    form: 'Fill Out Form',
    formSub: 'Send a detailed message',
    close: 'Close'
  }
};

const whatsappMessage = messages[locale][context as keyof typeof messages['pt']];
const encodedMessage = encodeURIComponent(whatsappMessage);
const whatsappUrl = `https://wa.me/351924466899?text=${encodedMessage}`;
---

<div id="contact-modal" class="contact-modal" data-locale={locale} data-context={context}>
  <div class="modal-overlay"></div>
  <div class="modal-content">
    <button class="modal-close" aria-label={copy[locale].close}>
      <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M18 6L6 18M6 6L18 18" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
      </svg>
    </button>

    <div class="modal-header">
      <h3>{copy[locale].title}</h3>
    </div>

    <div class="modal-actions">
      <a href={whatsappUrl} class="modal-btn whatsapp-btn" target="_blank" rel="noopener noreferrer" data-action="whatsapp">
        <div class="btn-icon">
          <svg width="28" height="28" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893a11.821 11.821 0 00-3.48-8.413Z" fill="currentColor"/>
          </svg>
        </div>
        <div class="btn-text">
          <span class="btn-label">{copy[locale].whatsapp}</span>
          <span class="btn-sublabel">{copy[locale].whatsappSub}</span>
        </div>
      </a>

      <a href="tel:+351924466899" class="modal-btn phone-btn" data-action="call">
        <div class="btn-icon">
          <svg width="28" height="28" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M6.62 10.79c1.44 2.83 3.76 5.14 6.59 6.59l2.2-2.2c.27-.27.67-.36 1.02-.24 1.12.37 2.33.57 3.57.57.55 0 1 .45 1 1V20c0 .55-.45 1-1 1-9.39 0-17-7.61-17-17 0-.55.45-1 1-1h3.5c.55 0 1 .45 1 1 0 1.25.2 2.45.57 3.57.11.35.03.74-.25 1.02l-2.2 2.2z" fill="currentColor"/>
          </svg>
        </div>
        <div class="btn-text">
          <span class="btn-label">{copy[locale].call}</span>
          <span class="btn-sublabel">{copy[locale].callSub}</span>
        </div>
      </a>

      <button class="modal-btn form-btn" data-action="form">
        <div class="btn-icon">
          <svg width="28" height="28" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z" fill="currentColor"/>
          </svg>
        </div>
        <div class="btn-text">
          <span class="btn-label">{copy[locale].form}</span>
          <span class="btn-sublabel">{copy[locale].formSub}</span>
        </div>
      </button>
    </div>
  </div>
</div>

<script>
  // Modal functionality
  function initContactModal() {
    const modal = document.getElementById('contact-modal');
    const overlay = modal?.querySelector('.modal-overlay');
    const closeBtn = modal?.querySelector('.modal-close');
    const modalBtns = modal?.querySelectorAll('.modal-btn');

    if (!modal) return;

    // Function to open modal
    window.openContactModal = (context?: string) => {
      if (context) {
        modal.setAttribute('data-context', context);
        // Update WhatsApp URL with new context
        const locale = modal.getAttribute('data-locale') || 'pt';
        const messages = {
          pt: {
            general: 'Olá! Gostaria de saber mais sobre os seus serviços de criação de websites.',
            landing: 'Olá! Estou interessado numa landing page para o meu negócio.',
            seo: 'Olá! Gostaria de melhorar o SEO do meu negócio e aparecer no Google.',
            project: 'Olá! Vi o vosso trabalho e gostaria de discutir um projeto semelhante.',
            service: 'Olá! Gostaria de falar sobre este serviço específico.',
          },
          en: {
            general: 'Hi! I would like to know more about your website development services.',
            landing: 'Hi! I am interested in a landing page for my business.',
            seo: 'Hi! I would like to improve my business SEO and appear on Google.',
            project: 'Hi! I saw your work and would like to discuss a similar project.',
            service: 'Hi! I would like to talk about this specific service.',
          }
        };
        const message = messages[locale as 'pt' | 'en'][context as keyof typeof messages['pt']] || messages[locale as 'pt' | 'en']['general'];
        const encodedMessage = encodeURIComponent(message);
        const whatsappBtn = modal.querySelector('.whatsapp-btn') as HTMLAnchorElement;
        if (whatsappBtn) {
          whatsappBtn.href = `https://wa.me/351924466899?text=${encodedMessage}`;
        }
      }

      modal.classList.add('active');
      document.body.style.overflow = 'hidden';

      // Track modal open
      if (typeof window.gtag !== 'undefined') {
        window.gtag('event', 'contact_modal_open', {
          context: context || modal.getAttribute('data-context') || 'general'
        });
      }
    };

    // Function to close modal
    function closeModal() {
      modal.classList.remove('active');
      document.body.style.overflow = '';
    }

    // Close on overlay click
    overlay?.addEventListener('click', closeModal);

    // Close on X button click
    closeBtn?.addEventListener('click', closeModal);

    // Close on ESC key
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && modal.classList.contains('active')) {
        closeModal();
      }
    });

    // Track button clicks and close modal
    modalBtns.forEach(btn => {
      btn.addEventListener('click', (e) => {
        const action = btn.getAttribute('data-action');
        const context = modal.getAttribute('data-context') || 'general';

        // Track conversion
        if (typeof window.gtag !== 'undefined') {
          window.gtag('event', 'conversion', {
            send_to: 'AW-17188917195/p5K-CISCxP8aEMufqIRA',
            event_label: `modal_${action}`,
            event_category: 'Modal Action',
            action: action,
            context: context,
            value: 1.0,
            currency: 'EUR'
          });
        }

        // Handle form action - scroll to contact form
        if (action === 'form') {
          e.preventDefault();
          closeModal();

          // Scroll to contact section
          setTimeout(() => {
            const contactSection = document.getElementById('contact') || document.getElementById('contact-form');
            if (contactSection) {
              contactSection.scrollIntoView({
                behavior: 'smooth',
                block: 'start'
              });

              // Focus on first input for better UX
              setTimeout(() => {
                const firstInput = contactSection.querySelector('input, textarea');
                if (firstInput) {
                  firstInput.focus();
                }
              }, 500);
            }
          }, 100);
        } else {
          // Close modal after short delay to ensure tracking for WhatsApp/Call
          setTimeout(() => {
            closeModal();
          }, 300);
        }
      });
    });

    // Attach to all elements with data-contact-trigger
    document.querySelectorAll('[data-contact-trigger]').forEach(trigger => {
      trigger.addEventListener('click', (e) => {
        e.preventDefault();
        const context = trigger.getAttribute('data-contact-context') || 'general';
        window.openContactModal(context);
      });
    });
  }

  // Initialize on page load
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initContactModal);
  } else {
    initContactModal();
  }
</script>

<style>
.contact-modal {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 9999;
  display: flex;
  align-items: center;
  justify-content: center;
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.3s ease;
}

.contact-modal.active {
  opacity: 1;
  pointer-events: auto;
}

.modal-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.85);
  backdrop-filter: blur(8px);
}

.modal-content {
  position: relative;
  background-color: var(--color-dark, #1a1a1a);
  border: 1px solid #333;
  border-radius: 24px;
  padding: 48px;
  max-width: 500px;
  width: 90%;
  transform: scale(0.9);
  transition: transform 0.3s ease;
  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.5);
}

.contact-modal.active .modal-content {
  transform: scale(1);
}

.modal-close {
  position: absolute;
  top: 20px;
  right: 20px;
  background: transparent;
  border: none;
  color: var(--color-text, #c7c7c7);
  cursor: pointer;
  padding: 8px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  transition: all 0.3s ease;
}

.modal-close:hover {
  background-color: rgba(255, 255, 255, 0.1);
  color: var(--color-accent, #d3e97a);
}

.modal-header {
  text-align: center;
  margin-bottom: 32px;
}

.modal-header h3 {
  font-family: var(--font-heading, 'Bebas Neue', sans-serif);
  font-size: 42px;
  letter-spacing: -0.42px;
  color: var(--color-text, #c7c7c7);
  margin: 0;
  line-height: 1.1;
}

.modal-actions {
  display: flex;
  flex-direction: column;
  gap: 16px;
}

.modal-btn {
  display: flex;
  align-items: center;
  gap: 20px;
  padding: 24px;
  border-radius: 16px;
  text-decoration: none;
  transition: all 0.3s ease;
  border: 2px solid transparent;
  position: relative;
  overflow: hidden;
}

.modal-btn::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(135deg, transparent 0%, rgba(255, 255, 255, 0.1) 100%);
  opacity: 0;
  transition: opacity 0.3s ease;
}

.modal-btn:hover::before {
  opacity: 1;
}

.whatsapp-btn {
  background: linear-gradient(135deg, #25D366 0%, #128C7E 100%);
  color: white;
  box-shadow: 0 4px 20px rgba(37, 211, 102, 0.3);
}

.whatsapp-btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 8px 30px rgba(37, 211, 102, 0.4);
  border-color: rgba(255, 255, 255, 0.2);
}

.phone-btn {
  background: linear-gradient(135deg, var(--color-accent, #d3e97a) 0%, #c5db6f 100%);
  color: var(--color-bg, #0d0d0d);
  box-shadow: 0 4px 20px rgba(211, 233, 122, 0.3);
}

.phone-btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 8px 30px rgba(211, 233, 122, 0.4);
  border-color: rgba(0, 0, 0, 0.1);
}

.form-btn {
  background: linear-gradient(135deg, #2a2a2a 0%, #1f1f1f 100%);
  color: var(--color-text, #c7c7c7);
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
  border: 2px solid #333;
}

.form-btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.4);
  border-color: var(--color-accent, #d3e97a);
  color: var(--color-accent, #d3e97a);
}

.btn-icon {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 56px;
  height: 56px;
  background-color: rgba(255, 255, 255, 0.15);
  border-radius: 12px;
  flex-shrink: 0;
}

.phone-btn .btn-icon {
  background-color: rgba(0, 0, 0, 0.1);
}

.btn-text {
  display: flex;
  flex-direction: column;
  gap: 4px;
  flex: 1;
}

.btn-label {
  font-size: 18px;
  font-weight: 700;
  line-height: 1.2;
}

.btn-sublabel {
  font-size: 14px;
  opacity: 0.9;
  font-weight: 500;
}

/* Mobile responsiveness */
@media (max-width: 768px) {
  .modal-content {
    padding: 32px 24px;
    border-radius: 20px;
  }

  .modal-header h3 {
    font-size: 36px;
  }

  .modal-btn {
    padding: 20px;
  }

  .btn-icon {
    width: 48px;
    height: 48px;
  }

  .btn-icon svg {
    width: 24px;
    height: 24px;
  }

  .btn-label {
    font-size: 16px;
  }

  .btn-sublabel {
    font-size: 13px;
  }
}

/* Accessibility */
@media (prefers-reduced-motion: reduce) {
  .contact-modal,
  .modal-content,
  .modal-btn {
    transition: none;
  }
}
</style>

<!-- TypeScript declaration for global function -->
<script is:inline>
  window.openContactModal = window.openContactModal || function() {};
</script>
